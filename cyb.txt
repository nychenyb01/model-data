<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>全周期提前还款贷款计算器</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Microsoft YaHei', Arial, sans-serif;
        }
        
        body {
            background-color: #f5f7fa;
            color: #333;
            line-height: 1.6;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            padding: 25px;
        }
        
        h1 {
            text-align: center;
            color: #2c3e50;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 2px solid #eee;
        }
        
        .calculator-container {
            display: flex;
            flex-wrap: wrap;
            gap: 25px;
            margin-bottom: 25px;
        }
        
        .input-section, .result-section {
            flex: 1;
            min-width: 300px;
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
        }
        
        h2 {
            color: #3498db;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #555;
        }
        
        input, select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }
        
        button {
            background: #3498db;
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            transition: background 0.3s;
            width: 100%;
            margin-top: 10px;
        }
        
        button:hover {
            background: #2980b9;
        }
        
        .prepayment-list {
            margin-top: 15px;
            max-height: 200px;
            overflow-y: auto;
            border: 1px solid #eee;
            border-radius: 4px;
            padding: 10px;
        }
        
        .prepayment-item {
            display: flex;
            justify-content: space-between;
            padding: 8px;
            border-bottom: 1px solid #eee;
        }
        
        .prepayment-item:last-child {
            border-bottom: none;
        }
        
        .delete-btn {
            background: #e74c3c;
            color: white;
            border: none;
            padding: 3px 8px;
            border-radius: 3px;
            cursor: pointer;
            width: auto;
        }
        
        .result-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 12px;
            padding-bottom: 12px;
            border-bottom: 1px dashed #eee;
        }
        
        .result-label {
            font-weight: bold;
            color: #555;
        }
        
        .result-value {
            font-weight: bold;
            color: #2c3e50;
        }
        
        .savings {
            color: #27ae60;
        }
        
        .payment-plan-container {
            margin-top: 25px;
            max-height: 500px;
            overflow-y: auto;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            background: #fff;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
        }
        
        th, td {
            padding: 12px 15px;
            text-align: center;
            border-bottom: 1px solid #ddd;
        }
        
        th {
            background-color: #3498db;
            color: white;
            position: sticky;
            top: 0;
        }
        
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        
        tr:hover {
            background-color: #f1f1f1;
        }
        
        .summary {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            margin-top: 20px;
        }
        
        @media (max-width: 768px) {
            .calculator-container {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>全周期提前还款贷款计算器</h1>
        
        <div class="calculator-container">
            <div class="input-section">
                <h2>贷款信息</h2>
                <div class="form-group">
                    <label for="loanAmount">贷款本金（元）</label>
                    <input type="number" id="loanAmount" value="1000000" min="0">
                </div>
                <div class="form-group">
                    <label for="loanTerm">贷款期限（月）</label>
                    <input type="number" id="loanTerm" value="360" min="1">
                </div>
                <div class="form-group">
                    <label for="annualRate">年利率（%）</label>
                    <input type="number" id="annualRate" value="4.9" step="0.01" min="0">
                </div>
                <div class="form-group">
                    <label for="startDate">起始日期</label>
                    <input type="date" id="startDate">
                </div>
                
                <h2>提前还款计划</h2>
                <div class="form-group">
                    <label for="prepayDate">还款日期</label>
                    <input type="date" id="prepayDate">
                </div>
                <div class="form-group">
                    <label for="prepayAmount">还款金额（元）</label>
                    <input type="number" id="prepayAmount" value="0" min="0">
                </div>
                <button id="addPrepayment">添加提前还款</button>
                
                <div class="prepayment-list" id="prepaymentList">
                    <!-- 提前还款计划将在这里显示 -->
                </div>
                
                <button id="calculateBtn">计算还款计划</button>
            </div>
            
            <div class="result-section">
                <h2>计算结果对比</h2>
                <div id="resultComparison">
                    <!-- 结果对比将在这里显示 -->
                </div>
            </div>
        </div>
        
        <div class="payment-plan-container">
            <h2>还款计划表</h2>
            <table id="paymentPlanTable">
                <thead>
                    <tr>
                        <th>期数</th>
                        <th>还款日期</th>
                        <th>月供本金</th>
                        <th>月供利息</th>
                        <th>月供总额</th>
                        <th>提前还款</th>
                        <th>剩余本金</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- 还款计划将在这里显示 -->
                </tbody>
            </table>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // 设置默认起始日期为今天
            const today = new Date();
            const formattedDate = today.toISOString().split('T')[0];
            document.getElementById('startDate').value = formattedDate;
            document.getElementById('prepayDate').value = formattedDate;
            
            let prepaymentPlans = [];
            
            // 添加提前还款计划
            document.getElementById('addPrepayment').addEventListener('click', function() {
                const date = document.getElementById('prepayDate').value;
                const amount = parseFloat(document.getElementById('prepayAmount').value);
                
                if (!date || isNaN(amount) || amount <= 0) {
                    alert('请输入有效的日期和金额！');
                    return;
                }
                
                prepaymentPlans.push({ date, amount });
                updatePrepaymentList();
            });
            
            // 更新提前还款计划列表
            function updatePrepaymentList() {
                const list = document.getElementById('prepaymentList');
                list.innerHTML = '';
                
                prepaymentPlans.forEach((plan, index) => {
                    const item = document.createElement('div');
                    item.className = 'prepayment-item';
                    item.innerHTML = `
                        <span>${plan.date}: ${plan.amount.toLocaleString()}元</span>
                        <button class="delete-btn" data-index="${index}">删除</button>
                    `;
                    list.appendChild(item);
                });
                
                // 添加删除事件监听
                document.querySelectorAll('.delete-btn').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const index = parseInt(this.getAttribute('data-index'));
                        prepaymentPlans.splice(index, 1);
                        updatePrepaymentList();
                    });
                });
            }
            
            // 计算还款计划
            document.getElementById('calculateBtn').addEventListener('click', function() {
                calculatePaymentPlan();
            });
            
            // 计算还款计划主函数
            function calculatePaymentPlan() {
                // 获取输入值
                const loanAmount = parseFloat(document.getElementById('loanAmount').value);
                const loanTerm = parseInt(document.getElementById('loanTerm').value);
                const annualRate = parseFloat(document.getElementById('annualRate').value) / 100;
                const startDate = new Date(document.getElementById('startDate').value);
                
                if (isNaN(loanAmount) || isNaN(loanTerm) || isNaN(annualRate) || isNaN(startDate.getTime())) {
                    alert('请输入有效的贷款信息！');
                    return;
                }
                
                // 月利率
                const monthlyRate = annualRate / 12;
                
                // 计算等额本息每月还款额
                const monthlyPayment = loanAmount * monthlyRate * Math.pow(1 + monthlyRate, loanTerm) / 
                                      (Math.pow(1 + monthlyRate, loanTerm) - 1);
                
                // 生成原还款计划
                const originalPlan = generateOriginalPlan(loanAmount, loanTerm, monthlyRate, monthlyPayment, startDate);
                
                // 生成提前还款后的计划
                const prepaymentPlan = generatePrepaymentPlan(originalPlan, prepaymentPlans, monthlyPayment, monthlyRate);
                
                // 显示结果对比
                displayResultComparison(originalPlan, prepaymentPlan);
                
                // 显示还款计划表
                displayPaymentPlanTable(prepaymentPlan);
            }
            
            // 生成原还款计划
            function generateOriginalPlan(principal, term, monthlyRate, monthlyPayment, startDate) {
                const plan = [];
                let remainingPrincipal = principal;
                
                for (let i = 1; i <= term; i++) {
                    // 计算利息和本金
                    const interest = remainingPrincipal * monthlyRate;
                    const principalPayment = monthlyPayment - interest;
                    
                    // 更新剩余本金
                    remainingPrincipal -= principalPayment;
                    
                    // 防止最后一个月因精度问题剩余负的本金
                    if (i === term && Math.abs(remainingPrincipal) < 0.01) {
                        remainingPrincipal = 0;
                    }
                    
                    // 计算还款日期
                    const paymentDate = new Date(startDate);
                    paymentDate.setMonth(paymentDate.getMonth() + i - 1);
                    
                    plan.push({
                        period: i,
                        date: new Date(paymentDate),
                        principalPayment: principalPayment,
                        interestPayment: interest,
                        totalPayment: monthlyPayment,
                        prepayment: 0,
                        remainingPrincipal: Math.max(0, remainingPrincipal)
                    });
                }
                
                return plan;
            }
            
            // 生成提前还款后的计划
            function generatePrepaymentPlan(originalPlan, prepaymentPlans, monthlyPayment, monthlyRate) {
                // 深拷贝原计划
                const plan = JSON.parse(JSON.stringify(originalPlan));
                
                // 按日期排序提前还款计划
                const sortedPrepayments = [...prepaymentPlans].sort((a, b) => 
                    new Date(a.date) - new Date(b.date)
                );
                
                let prepaymentIndex = 0;
                let remainingPrepayments = [...sortedPrepayments];
                
                for (let i = 0; i < plan.length; i++) {
                    const currentDate = plan[i].date.toISOString().split('T')[0];
                    
                    // 检查是否有在当前期的提前还款
                    while (prepaymentIndex < sortedPrepayments.length && 
                           new Date(sortedPrepayments[prepaymentIndex].date) <= new Date(plan[i].date)) {
                        
                        const prepayment = sortedPrepayments[prepaymentIndex];
                        plan[i].prepayment += prepayment.amount;
                        
                        // 减少剩余本金
                        plan[i].remainingPrincipal -= prepayment.amount;
                        
                        // 从剩余提前还款中移除
                        remainingPrepayments = remainingPrepayments.filter(p => p !== prepayment);
                        prepaymentIndex++;
                    }
                    
                    // 如果当期有提前还款，重新计算后续计划
                    if (plan[i].prepayment > 0) {
                        // 调整剩余本金
                        let newRemainingPrincipal = plan[i].remainingPrincipal;
                        
                        // 重新计算后续期数
                        for (let j = i + 1; j < plan.length; j++) {
                            // 计算新利息
                            const interest = newRemainingPrincipal * monthlyRate;
                            const principalPayment = monthlyPayment - interest;
                            
                            // 更新剩余本金
                            newRemainingPrincipal -= principalPayment;
                            
                            // 更新计划
                            plan[j].principalPayment = principalPayment;
                            plan[j].interestPayment = interest;
                            plan[j].remainingPrincipal = Math.max(0, newRemainingPrincipal);
                            
                            // 如果剩余本金为0，移除后续期数
                            if (newRemainingPrincipal <= 0) {
                                plan.splice(j + 1, plan.length - j - 1);
                                break;
                            }
                        }
                    }
                    
                    // 如果剩余本金为0，结束计算
                    if (plan[i].remainingPrincipal <= 0) {
                        plan.splice(i + 1, plan.length - i - 1);
                        break;
                    }
                }
                
                return plan;
            }
            
            // 显示结果对比
            function displayResultComparison(originalPlan, prepaymentPlan) {
                const originalTotalInterest = originalPlan.reduce((sum, payment) => sum + payment.interestPayment, 0);
                const prepaymentTotalInterest = prepaymentPlan.reduce((sum, payment) => sum + payment.interestPayment, 0);
                const interestSaved = originalTotalInterest - prepaymentTotalInterest;
                
                const originalTotalPayment = originalPlan.reduce((sum, payment) => sum + payment.totalPayment, 0);
                const prepaymentTotalPayment = prepaymentPlan.reduce((sum, payment) => sum + payment.totalPayment, 0) + 
                                             prepaymentPlan.reduce((sum, payment) => sum + payment.prepayment, 0);
                
                const resultHtml = `
                    <div class="result-item">
                        <span class="result-label">原还款总利息:</span>
                        <span class="result-value">${originalTotalInterest.toFixed(2)}元</span>
                    </div>
                    <div class="result-item">
                        <span class="result-label">现还款总利息:</span>
                        <span class="result-value">${prepaymentTotalInterest.toFixed(2)}元</span>
                    </div>
                    <div class="result-item">
                        <span class="result-label">节省利息:</span>
                        <span class="result-value savings">${interestSaved.toFixed(2)}元</span>
                    </div>
                    <div class="result-item">
                        <span class="result-label">原还款总额:</span>
                        <span class="result-value">${originalTotalPayment.toFixed(2)}元</span>
                    </div>
                    <div class="result-item">
                        <span class="result-label">现还款总额:</span>
                        <span class="result-value">${prepaymentTotalPayment.toFixed(2)}元</span>
                    </div>
                    <div class="result-item">
                        <span class="result-label">原还款期数:</span>
                        <span class="result-value">${originalPlan.length}期</span>
                    </div>
                    <div class="result-item">
                        <span class="result-label">现还款期数:</span>
                        <span class="result-value">${prepaymentPlan.length}期</span>
                    </div>
                    <div class="result-item">
                        <span class="result-label">缩短期数:</span>
                        <span class="result-value savings">${originalPlan.length - prepaymentPlan.length}期</span>
                    </div>
                `;
                
                document.getElementById('resultComparison').innerHTML = resultHtml;
            }
            
            // 显示还款计划表
            function displayPaymentPlanTable(plan) {
                const tableBody = document.querySelector('#paymentPlanTable tbody');
                tableBody.innerHTML = '';
                
                plan.forEach(payment => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${payment.period}</td>
                        <td>${payment.date.toISOString().split('T')[0]}</td>
                        <td>${payment.principalPayment.toFixed(2)}</td>
                        <td>${payment.interestPayment.toFixed(2)}</td>
                        <td>${payment.totalPayment.toFixed(2)}</td>
                        <td>${payment.prepayment > 0 ? payment.prepayment.toFixed(2) : '-'}</td>
                        <td>${payment.remainingPrincipal.toFixed(2)}</td>
                    `;
                    tableBody.appendChild(row);
                });
            }
        });
    </script>
</body>
</html>