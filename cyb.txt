1
<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>房贷提前还款计算器</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: #f5f7fa;
            color: #333;
            line-height: 1.6;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px;
            background: linear-gradient(135deg, #2c3e50, #4a6491);
            color: white;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        
        h1 {
            margin-bottom: 10px;
            font-size: 2.2rem;
        }
        
        .description {
            font-size: 1.1rem;
            opacity: 0.9;
        }
        
        .calculator-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .input-section {
            flex: 1;
            min-width: 300px;
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        }
        
        .result-section {
            flex: 1;
            min-width: 300px;
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        }
        
        h2 {
            margin-bottom: 20px;
            color: #2c3e50;
            padding-bottom: 10px;
            border-bottom: 2px solid #f0f0f0;
        }
        
        h3 {
            margin: 20px 0 15px;
            color: #2c3e50;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #2c3e50;
        }
        
        input, select {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 6px;
            font-size: 16px;
            transition: border 0.3s;
        }
        
        input:focus, select:focus {
            border-color: #4a6491;
            outline: none;
        }
        
        button {
            background: linear-gradient(135deg, #2c3e50, #4a6491);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: transform 0.2s, box-shadow 0.2s;
        }
        
        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        
        .btn-secondary {
            background: linear-gradient(135deg, #6c757d, #9fa6b0);
        }
        
        .btn-danger {
            background: linear-gradient(135deg, #dc3545, #e25563);
        }
        
        .result-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 1px solid #f0f0f0;
        }
        
        .result-label {
            font-weight: 600;
            color: #2c3e50;
        }
        
        .result-value {
            font-weight: 700;
            color: #2c3e50;
            font-size: 1.1rem;
        }
        
        .highlight {
            color: #e74c3c;
        }
        
        .positive {
            color: #27ae60;
        }
        
        .savings {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            margin-top: 20px;
            border-left: 4px solid #2c3e50;
        }
        
        .chart-container {
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            margin-bottom: 30px;
        }
        
        .summary-cards {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .card {
            flex: 1;
            min-width: 200px;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            text-align: center;
        }
        
        .card h3 {
            margin-bottom: 10px;
            color: #2c3e50;
        }
        
        .card p {
            font-size: 1.5rem;
            font-weight: 700;
            color: #2c3e50;
        }
        
        .payment-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        
        .payment-table th, .payment-table td {
            padding: 12px 15px;
            text-align: center;
            border-bottom: 1px solid #ddd;
        }
        
        .payment-table th {
            background-color: #f8f9fa;
            font-weight: 600;
        }
        
        .payment-table tr:hover {
            background-color: #f5f7fa;
        }
        
        .prepay-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
        }
        
        .prepay-table th, .prepay-table td {
            padding: 10px;
            text-align: center;
            border: 1px solid #ddd;
        }
        
        .prepay-table th {
            background-color: #f8f9fa;
        }
        
        .collapsed-rows {
            text-align: center;
            padding: 10px;
            background-color: #f8f9fa;
            font-style: italic;
            color: #6c757d;
        }
        
        .toggle-rows {
            text-align: center;
            padding: 10px;
            cursor: pointer;
            color: #4a6491;
            font-weight: 600;
        }
        
        @media (max-width: 768px) {
            .calculator-container {
                flex-direction: column;
            }
            
            .summary-cards {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>房贷提前还款计算器</h1>
            <p class="description">支持非连续提前还款，计算剩余利息、月供和期数变化</p>
        </header>
        
        <div class="calculator-container">
            <div class="input-section">
                <h2>贷款信息</h2>
                <div class="form-group">
                    <label for="loanAmount">贷款本金（万元）</label>
                    <input type="number" id="loanAmount" value="441" min="1" step="0.1">
                </div>
                <div class="form-group">
                    <label for="loanTerm">贷款期限（年）</label>
                    <input type="number" id="loanTerm" value="30" min="1" max="50">
                </div>
                <div class="form-group">
                    <label for="annualRate">年利率（%）</label>
                    <input type="number" id="annualRate" value="2.95" min="0.1" step="0.01">
                </div>
                <div class="form-group">
                    <label for="startDate">贷款起始日期</label>
                    <input type="date" id="startDate" value="2023-01-01">
                </div>
                
                <h2>提前还款计划</h2>
                <div class="form-group">
                    <label for="prepayDate">提前还款日期</label>
                    <input type="date" id="prepayDate">
                </div>
                <div class="form-group">
                    <label for="prepayAmount">提前还款金额（万元）</label>
                    <input type="number" id="prepayAmount" value="0" min="0" step="0.1">
                </div>
                <button id="addPrepayBtn">添加提前还款</button>
                
                <h3>提前还款计划表</h3>
                <table class="prepay-table">
                    <thead>
                        <tr>
                            <th>还款日期</th>
                            <th>金额（万元）</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody id="prepayTableBody">
                        <!-- 提前还款计划将通过JavaScript生成 -->
                    </tbody>
                </table>
                
                <button id="calculateBtn" style="width: 100%; margin-top: 20px;">计算还款计划</button>
            </div>
            
            <div class="result-section">
                <h2>计算结果</h2>
                <div class="result-item">
                    <span class="result-label">原月供金额：</span>
                    <span class="result-value" id="originalMonthly">18,474.03元</span>
                </div>
                <div class="result-item">
                    <span class="result-label">原总利息：</span>
                    <span class="result-value" id="originalInterest">2,240,650.80元</span>
                </div>
                <div class="result-item">
                    <span class="result-label">剩余本金：</span>
                    <span class="result-value" id="remainingPrincipal">4,410,000元</span>
                </div>
                <div class="result-item">
                    <span class="result-label">新每月还款：</span>
                    <span class="result-value" id="newMonthly">18,474.03元</span>
                </div>
                <div class="result-item">
                    <span class="result-label">剩余总利息：</span>
                    <span class="result-value" id="remainingInterest">2,240,650.80元</span>
                </div>
                <div class="result-item">
                    <span class="result-label">节省利息：</span>
                    <span class="result-value highlight" id="savedInterest">0元</span>
                </div>
                <div class="result-item">
                    <span class="result-label">剩余期数：</span>
                    <span class="result-value" id="remainingMonths">360个月</span>
                </div>
                
                <div class="savings">
                    <h3>提前还款效果</h3>
                    <p>通过提前还款，您将节省 <span id="savingsAmount" class="highlight">0元</span> 利息，</p>
                    <p>贷款期限缩短 <span id="reducedMonths" class="highlight">0个月</span>。</p>
                </div>
            </div>
        </div>
        
        <div class="summary-cards">
            <div class="card">
                <h3>原还款总额</h3>
                <p id="originalTotal">6,650,650.80元</p>
            </div>
            <div class="card">
                <h3>新还款总额</h3>
                <p id="newTotal">6,650,650.80元</p>
            </div>
            <div class="card">
                <h3>节省总额</h3>
                <p id="totalSavings">0元</p>
            </div>
            <div class="card">
                <h3>提前还款比例</h3>
                <p id="prepayPercentage">0%</p>
            </div>
        </div>
        
        <div class="chart-container">
            <h2>还款对比分析</h2>
            <canvas id="paymentChart" height="100"></canvas>
        </div>
        
        <div class="chart-container">
            <h2>完整还款计划表</h2>
            <table class="payment-table">
                <thead>
                    <tr>
                        <th>期数</th>
                        <th>还款日期</th>
                        <th>月供本金</th>
                        <th>月供利息</th>
                        <th>提前还款</th>
                        <th>剩余本金</th>
                    </tr>
                </thead>
                <tbody id="paymentTableBody">
                    <!-- 表格内容将通过JavaScript生成 -->
                </tbody>
            </table>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // 初始化图表
            const ctx = document.getElementById('paymentChart').getContext('2d');
            const paymentChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['原总利息', '新总利息', '原还款总额', '新还款总额'],
                    datasets: [{
                        label: '金额（元）',
                        data: [2240650.80, 2240650.80, 6650650.80, 6650650.80],
                        backgroundColor: [
                            'rgba(54, 162, 235, 0.5)',
                            'rgba(75, 192, 192, 0.5)',
                            'rgba(255, 99, 132, 0.5)',
                            'rgba(255, 159, 64, 0.5)'
                        ],
                        borderColor: [
                            'rgb(54, 162, 235)',
                            'rgb(75, 192, 192)',
                            'rgb(255, 99, 132)',
                            'rgb(255, 159, 64)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        title: {
                            display: true,
                            text: '还款对比分析'
                        },
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return value.toLocaleString() + '元';
                                }
                            }
                        }
                    }
                }
            });
            
            // 提前还款计划数据
            let prepayPlans = [];
            
            // 添加提前还款按钮事件
            document.getElementById('addPrepayBtn').addEventListener('click', function() {
                const date = document.getElementById('prepayDate').value;
                const amount = parseFloat(document.getElementById('prepayAmount').value);
                
                if (!date || isNaN(amount) || amount <= 0) {
                    alert('请输入有效的日期和金额');
                    return;
                }
                
                // 添加到计划
                prepayPlans.push({ date, amount: amount * 10000 });
                
                // 更新表格显示
                updatePrepayTable();
                
                // 清空输入
                document.getElementById('prepayAmount').value = '';
            });
            
            // 更新提前还款计划表
            function updatePrepayTable() {
                const tableBody = document.getElementById('prepayTableBody');
                tableBody.innerHTML = '';
                
                // 按日期排序
                prepayPlans.sort((a, b) => new Date(a.date) - new Date(b.date));
                
                prepayPlans.forEach((plan, index) => {
                    const row = document.createElement('tr');
                    
                    // 日期
                    const dateCell = document.createElement('td');
                    const dateObj = new Date(plan.date);
                    dateCell.textContent = dateObj.toLocaleDateString();
                    row.appendChild(dateCell);
                    
                    // 金额
                    const amountCell = document.createElement('td');
                    amountCell.textContent = (plan.amount / 10000).toFixed(2);
                    row.appendChild(amountCell);
                    
                    // 操作
                    const actionCell = document.createElement('td');
                    const deleteBtn = document.createElement('button');
                    deleteBtn.textContent = '删除';
                    deleteBtn.classList.add('btn-danger');
                    deleteBtn.addEventListener('click', function() {
                        prepayPlans.splice(index, 1);
                        updatePrepayTable();
                    });
                    actionCell.appendChild(deleteBtn);
                    row.appendChild(actionCell);
                    
                    tableBody.appendChild(row);
                });
            }
            
            // 计算按钮点击事件
            document.getElementById('calculateBtn').addEventListener('click', function() {
                calculateLoan();
            });
            
            // 初始化计算
            calculateLoan();
            
            // 计算贷款函数
            function calculateLoan() {
                // 获取输入值
                const loanAmount = parseFloat(document.getElementById('loanAmount').value) * 10000;
                const loanTerm = parseInt(document.getElementById('loanTerm').value);
                const annualRate = parseFloat(document.getElementById('annualRate').value) / 100;
                const startDate = new Date(document.getElementById('startDate').value);
                
                // 计算月利率
                const monthlyRate = annualRate / 12;
                
                // 计算总期数
                const totalMonths = loanTerm * 12;
                
                // 计算原月供
                const monthlyPayment = loanAmount * monthlyRate * Math.pow(1 + monthlyRate, totalMonths) / 
                                      (Math.pow(1 + monthlyRate, totalMonths) - 1);
                
                // 计算原总利息
                const totalInterest = monthlyPayment * totalMonths - loanAmount;
                
                // 按日期排序提前还款计划
                prepayPlans.sort((a, b) => new Date(a.date) - new Date(b.date));
                
                // 初始化还款计划
                let remainingPrincipal = loanAmount;
                let totalPaidInterest = 0;
                let month = 1;
                let prepayIndex = 0;
                const paymentSchedule = [];
                
                // 计算还款计划（直到贷款还清）
                while (remainingPrincipal > 0 && month <= totalMonths) {
                    // 计算当前日期
                    const currentDate = new Date(startDate);
                    currentDate.setMonth(startDate.getMonth() + month - 1);
                    
                    // 当月利息
                    const monthlyInterest = remainingPrincipal * monthlyRate;
                    totalPaidInterest += monthlyInterest;
                    
                    // 当月本金
                    let monthlyPrincipal = monthlyPayment - monthlyInterest;
                    
                    // 检查是否有提前还款
                    let extraPayment = 0;
                    const currentDateStr = currentDate.toISOString().split('T')[0];
                    
                    // 检查所有提前还款计划
                    for (let i = prepayIndex; i < prepayPlans.length; i++) {
                        const planDateStr = prepayPlans[i].date;
                        
                        // 如果提前还款日期与当前月份匹配
                        if (planDateStr === currentDateStr) {
                            extraPayment += prepayPlans[i].amount;
                            prepayIndex = i + 1;
                        } else if (new Date(planDateStr) > currentDate) {
                            // 提前还款日期在未来，跳出循环
                            break;
                        }
                    }
                    
                    // 确保还款不超过剩余本金
                    if (monthlyPrincipal + extraPayment > remainingPrincipal) {
                        monthlyPrincipal = remainingPrincipal - extraPayment;
                    }
                    
                    // 更新剩余本金
                    remainingPrincipal -= (monthlyPrincipal + extraPayment);
                    
                    // 如果剩余本金非常小，直接清零
                    if (remainingPrincipal < 0.01) {
                        remainingPrincipal = 0;
                    }
                    
                    // 添加到还款计划
                    paymentSchedule.push({
                        month,
                        date: new Date(currentDate),
                        monthlyPrincipal,
                        monthlyInterest,
                        extraPayment,
                        remainingPrincipal: remainingPrincipal
                    });
                    
                    month++;
                    
                    // 如果剩余本金为0，退出循环
                    if (remainingPrincipal <= 0) {
                        break;
                    }
                }
                
                // 计算新总利息
                const newTotalInterest = totalPaidInterest;
                
                // 计算节省的利息
                const savedInterest = totalInterest - newTotalInterest;
                
                // 计算新还款总额
                const newTotalPayment = loanAmount + newTotalInterest;
                
                // 更新页面显示
                document.getElementById('originalMonthly').textContent = formatCurrency(monthlyPayment);
                document.getElementById('originalInterest').textContent = formatCurrency(totalInterest);
                document.getElementById('remainingPrincipal').textContent = formatCurrency(paymentSchedule[paymentSchedule.length - 1]?.remainingPrincipal || 0);
                document.getElementById('newMonthly').textContent = formatCurrency(monthlyPayment);
                document.getElementById('remainingInterest').textContent = formatCurrency(newTotalInterest);
                document.getElementById('savedInterest').textContent = formatCurrency(savedInterest);
                document.getElementById('remainingMonths').textContent = paymentSchedule.length + '个月';
                
                document.getElementById('originalTotal').textContent = formatCurrency(loanAmount + totalInterest);
                document.getElementById('newTotal').textContent = formatCurrency(newTotalPayment);
                document.getElementById('totalSavings').textContent = formatCurrency(loanAmount + totalInterest - newTotalPayment);
                
                const totalPrepay = prepayPlans.reduce((sum, plan) => sum + plan.amount, 0);
                document.getElementById('prepayPercentage').textContent = ((totalPrepay / loanAmount) * 100).toFixed(2) + '%';
                
                document.getElementById('savingsAmount').textContent = formatCurrency(savedInterest);
                document.getElementById('reducedMonths').textContent = (totalMonths - paymentSchedule.length) + '个月';
                
                // 更新图表
                paymentChart.data.datasets[0].data = [
                    totalInterest, 
                    newTotalInterest, 
                    loanAmount + totalInterest, 
                    newTotalPayment
                ];
                paymentChart.update();
                
                // 更新还款计划表
                updatePaymentTable(paymentSchedule);
            }
            
            // 格式化货币显示
            function formatCurrency(amount) {
                return amount.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '元';
            }
            
            // 更新还款计划表
            function updatePaymentTable(paymentSchedule) {
                const tableBody = document.getElementById('paymentTableBody');
                tableBody.innerHTML = '';
                
                // 显示完整的还款计划，但可以折叠中间部分
                const totalMonths = paymentSchedule.length;
                
                // 显示前5个月
                for (let i = 0; i < Math.min(5, totalMonths); i++) {
                    addPaymentRow(tableBody, paymentSchedule[i]);
                }
                
                // 添加省略行（如果有足够的数据）
                if (totalMonths > 10) {
                    const collapseRow = document.createElement('tr');
                    const collapseCell = document.createElement('td');
                    collapseCell.colSpan = 6;
                    collapseCell.className = 'collapsed-rows';
                    collapseCell.textContent = `省略了 ${totalMonths - 10} 个月的数据...`;
                    collapseRow.appendChild(collapseCell);
                    tableBody.appendChild(collapseRow);
                }
                
                // 显示最后5个月
                for (let i = Math.max(5, totalMonths - 5); i < totalMonths; i++) {
                    addPaymentRow(tableBody, paymentSchedule[i]);
                }
            }
            
            // 添加还款计划行
            function addPaymentRow(tableBody, payment) {
                const row = document.createElement('tr');
                
                // 期数
                const monthCell = document.createElement('td');
                monthCell.textContent = payment.month;
                row.appendChild(monthCell);
                
                // 还款日期
                const dateCell = document.createElement('td');
                dateCell.textContent = payment.date.toLocaleDateString();
                row.appendChild(dateCell);
                
                // 月供本金
                const principalCell = document.createElement('td');
                principalCell.textContent = formatCurrency(payment.monthlyPrincipal);
                row.appendChild(principalCell);
                
                // 月供利息
                const interestCell = document.createElement('td');
                interestCell.textContent = formatCurrency(payment.monthlyInterest);
                row.appendChild(interestCell);
                
                // 提前还款
                const prepayCell = document.createElement('td');
                prepayCell.textContent = payment.extraPayment > 0 ? formatCurrency(payment.extraPayment) : '-';
                row.appendChild(prepayCell);
                
                // 剩余本金
                const remainingCell = document.createElement('td');
                remainingCell.textContent = formatCurrency(payment.remainingPrincipal);
                row.appendChild(remainingCell);
                
                tableBody.appendChild(row);
            }
            
            // 设置默认日期为今天
            const today = new Date();
            document.getElementById('startDate').value = today.toISOString().split('T')[0];
            
            // 设置默认提前还款日期为明年今天
            const nextYear = new Date();
            nextYear.setFullYear(today.getFullYear() + 1);
            document.getElementById('prepayDate').value = nextYear.toISOString().split('T')[0];
        });
    </script>
</body>
</html>